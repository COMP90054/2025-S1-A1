class: "GraphSearchTest"
algorithm: "lrtaStarSearch"

diagram: """
    3      3      3
*A ---- B ---- C ---- [G]
 |                     ^
 |  1       1     10   |
 \----- D ---- E -----/

A is the start state, G is the goal.  Arrows mark possible state 
transitions.  The number next to the arrow is the cost of that transition.

If you fail this test case, you may be incorrectly testing if a node is a goal 
before adding it into the queue, instead of testing when you remove the node 
from the queue.  See the algorithm pseudocode in lecture.
"""

graph: """
start_state: A
goal_states: G
A 0:A->D D 1.0
A 1:A->B B 3.0
B 0:B->C C 3.0
B 1:B->A A 3.0
C 0:C->G G 3.0
C 0:C->B B 3.0
D 0:D->E E 1.0
D 1:D->A A 1.0
E 0:E->G G 10.0
E 0:E->D D 1.0
"""

heuristic: """
A 8
B 4
C 1
D 7
E 6
G 0
"""